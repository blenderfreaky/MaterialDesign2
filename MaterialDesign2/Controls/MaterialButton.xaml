<Button x:Class="MaterialDesign2.Controls.MaterialButton"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:MaterialDesign2.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:MaterialDesign2.Converters"
        mc:Ignorable="d" Name="Button"
        d:DesignHeight="450" d:DesignWidth="800" Padding="16,0" BorderThickness="0">
    <Button.Resources>
        <converters:BoolToChoose x:Key="BoolToChoose"/>
    </Button.Resources>
    <Button.Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="/MaterialDesign2;component/Fonts/Roboto/#Roboto"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
    </Button.Style>
    <Button.Effect>
        <DropShadowEffect x:Name="DropShadow" ShadowDepth="{Binding DefaultShadowDepth, ElementName=Button}" BlurRadius="{Binding DefaultShadowRadius, ElementName=Button}" Direction="-90" RenderingBias="Quality" Opacity="0">
        </DropShadowEffect>
    </Button.Effect>
    <Button.Template>
        <ControlTemplate x:Name="MaterialTemplate" TargetType="{x:Type Button}">
            <Grid ClipToBounds="True" SnapsToDevicePixels="True">
                <Grid.OpacityMask>
                    <VisualBrush ViewportUnits="Absolute" Viewport="0,0,800,450" x:Name="OpacityBrush">
                        <VisualBrush.Visual>
                            <Border Width="{Binding ActualWidth, ElementName=Button}"
                                    Height="{Binding ActualHeight, ElementName=Button}"
                                    Background="Black"
                                    CornerRadius="{Binding CornerRadius, ElementName=Button}"
                                    x:Name="BorderMask" Margin="0,0,0,0"
                                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="True" Grid.ColumnSpan="3">
                            </Border>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Grid.OpacityMask>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="{Binding LeftMinWidth, ElementName=Button}" MaxWidth="{Binding LeftMaxWidth, ElementName=Button}" Width="{Binding LeftWidth, ElementName=Button}"/>
                    <ColumnDefinition/>
                    <ColumnDefinition MinWidth="{Binding RightMinWidth, ElementName=Button}" MaxWidth="{Binding RightMaxWidth, ElementName=Button}" Width="{Binding RightWidth, ElementName=Button}"/>
                </Grid.ColumnDefinitions>

                <Border Width="Auto"
                        Height="Auto"
                        Background="{Binding Background, ElementName=Button}"
                        BorderBrush="{Binding BorderBrush, ElementName=Button}"
                        BorderThickness="{Binding BorderThickness, ElementName=Button}"
                        CornerRadius="{Binding CornerRadius, ElementName=Button}"
                        x:Name="ButtonBorder" Margin="0,0,0,0"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsHitTestVisible="True" Grid.ColumnSpan="3"  Panel.ZIndex="100">
                </Border>

                <Path x:Name="TouchPath" Fill="{Binding TouchOverlay, ElementName=Button}" Grid.ColumnSpan="3" Panel.ZIndex="10000">
                    <Path.Data>
                        <EllipseGeometry x:Name="Touch" Center="0,0" RadiusX="0.0" RadiusY="0.0"/>
                    </Path.Data>
                </Path>

                <Rectangle Name="Darken" IsHitTestVisible="False" Fill="{Binding HoverOverlay, ElementName=Button}" StrokeThickness="0" Opacity="0"
                               Width="Auto" Height="Auto" Grid.ColumnSpan="3" Panel.ZIndex="10000"/>
                <Rectangle Name="Toggle" IsHitTestVisible="False" Fill="{Binding ToggledOverlay, ElementName=Button}" StrokeThickness="0" Opacity="0"
                               Width="Auto" Height="Auto" Grid.ColumnSpan="3" Panel.ZIndex="500"/>

                <Border SnapsToDevicePixels="True" VerticalAlignment="Center" Grid.Column="1"  Panel.ZIndex="100">
                    <TextBlock SnapsToDevicePixels="True" x:Name="Label" Text="{Binding Text, ElementName=Button}" FontFamily="{Binding FontFamily, ElementName=Button}" FontSize="{Binding FontSize, ElementName=Button}" FontWeight="{Binding FontWeight, ElementName=Button}" FontStyle="{Binding FontStyle, ElementName=Button}" Grid.Column="1" TextAlignment="{Binding TextAlignment, ElementName=Button}"/>
                </Border>

                <Image x:Name="Icon" Source="{Binding Icon, ElementName=Button}" Grid.Column="0" Stretch="UniformToFill"/>

                <!--AdornerDecorator Grid.RowSpan="1" Grid.ColumnSpan="3"-->
                <ContentPresenter Grid.RowSpan="1" Grid.ColumnSpan="3" Panel.ZIndex="1000"/>
                <!--/AdornerDecorator-->
            </Grid>
        </ControlTemplate>
    </Button.Template>
</Button>
